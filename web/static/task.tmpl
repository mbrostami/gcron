
{{ template "header.tmpl" . }}

<h1>{{ .command.Command }}<span class="uk-text-small uk-align-right">#{{ .command.UID }}</span></h1>
{{if .message}} 
    <h3>{{.message}}</h3>
{{end}}

<canvas id="taskChart"  height="100"></canvas>

<ul class="uk-list uk-list-divider uk-dark uk-padding" uk-accordion>
{{range $element := .tasks}}
    <li>
        <div class="uk-accordion-title">
            {{if $element.Success}}
                <span class="uk-label uk-label-success">{{$element.StartTime.Seconds | secondsToDate}}</span>
            {{else}}
                <span class="uk-label uk-label-danger">{{$element.StartTime.Seconds | secondsToDate}}</span>
            {{end}}
            <a href="#">{{ $element.Output | subStringOfByte }} </a>
            <span class="uk-label uk-label-primary uk-align-right uk-margin-small-bottom uk-margin-small-left">{{ $element.Username }}</span>
            <span class="uk-label uk-label-primary uk-align-right uk-margin-small-bottom uk-margin-small-left">{{$element | getDuration}} s</span>
        </div>
        <div class="uk-accordion-content">
            <div class="uk-light uk-background-secondary uk-padding">
                <p>
                -- PID: {{$element.Pid}} <br>
                -- UID: {{$element.UID}} <br>
                -- GUID: {{$element.GUID}} <br>
                -- Username: {{$element.Username}} <br>
                -- Parent: {{$element.Parent}} <br>
                -- Hostname: {{$element.Hostname}} <br>
                -- UserTime: {{$element.UserTime.Nanos | nanoToMili}} ms<br>
                -- SystemTime: {{$element.SystemTime.Nanos | nanoToMili}} ms<br>
                -- StartTime: {{$element.StartTime.Seconds | secondsToDate}} <br>
                -- EndTime: {{$element.EndTime.Seconds | secondsToDate}} <br><br>
                # {{$element.Command}} <br>
                {{ $element.Output | byteToString }}
                </p>
            </div>
        </div>
    </li>
{{end}}
</ul>

<script>
    document.addEventListener("DOMContentLoaded", function(){
        var ctx = document.getElementById('taskChart').getContext('2d');
        var chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'line',
    
            // The data for our dataset
            data: {
                labels: {{ .xAxis | stringArrayToJson }},
                datasets: [{
                    fill: false,
                    label: 'Duration',
                    backgroundColor: 'rgb(255, 99, 132)',
                    borderColor: 'rgb(255, 99, 132)',
                    data: {{ .yAxis | floatArrayToJson }}
                }]
            },
    
            // Configuration options go here
            options: {
                responsive: true,
                scales: {
                    yAxes: [{
                        display: true,
                        ticks: {
                            min: 0,
                            stepSize: 0.5
                        },
						scaleLabel: {
							display: true,
							labelString: 'Duration'
						}
					}],
                    xAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Time'
						}
					}]
                }
            }
        });
    });
</script>
{{ template "footer.tmpl" }}